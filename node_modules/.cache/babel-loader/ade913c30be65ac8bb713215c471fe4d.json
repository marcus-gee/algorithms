{"ast":null,"code":"var _jsxFileName = \"/Users/marcusgee/Desktop/Projects/algorithms/src/sorter/SorterApp.js\";\nimport React from \"react\";\nimport AlgoPicker from \"./AlgoPicker/AlgoPicker.js\";\nimport Slider from \"./Slider/Slider.js\";\nimport AlgoContainer from \"./AlgoContainer/AlgoContainer.js\";\nimport \"./SorterApp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SLIDER_MIN = 100;\nconst SLIDER_MAX = 2000;\nconst SLIDER_STEP = 10;\nconst SLIDER_DEFAULT = SLIDER_MAX / 2;\nconst MIN_BLOCK_LENGTH = 10;\nconst MAX_BLOCK_LENGTH = 500;\nconst ALGORITHMS = [\"Bubble\", \"Bucket\", \"Heap\", \"Insertion\", \"Merge\", \"Quick\", \"Radix\", \"Selection\"];\n\nclass SorterApp extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selected: [],\n      blockNumber: SLIDER_DEFAULT,\n      array: [...Array(SLIDER_MAX)].map(() => Math.floor(Math.random() * MAX_BLOCK_LENGTH))\n    };\n    this.handleAlgorithmClick = this.handleAlgorithmClick.bind(this);\n    this.handleSliderChange = this.handleSliderChange.bind(this);\n  }\n\n  handleAlgorithmClick(value) {\n    if (this.state.selected.some(item => item === value)) {\n      this.setState({\n        selected: this.state.selected.filter(item => item !== value)\n      });\n    } else {\n      this.setState({\n        selected: [...this.state.selected, value]\n      });\n    }\n  }\n\n  handleSliderChange(event) {\n    this.setState({\n      blockNumber: event.target.value\n    });\n  }\n\n  render() {\n    const header = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SorterApp-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"SorterApp-title\",\n        children: \"Sorter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlgoPicker, {\n        algorithms: ALGORITHMS,\n        selected: this.state.selected,\n        handleAlgorithmClick: this.handleAlgorithmClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        slider_value: this.state.blockNumber,\n        slider_min: SLIDER_MIN,\n        slider_max: SLIDER_MAX,\n        slider_default: SLIDER_DEFAULT,\n        slider_step: SLIDER_STEP,\n        handleSliderChange: this.handleSliderChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n\n    const body = this.state.selected.map((algorithm, index) => {\n      return /*#__PURE__*/_jsxDEV(AlgoContainer, {\n        name: algorithm,\n        array: this.state.array.slice(0, this.state.blockNumber)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this);\n    });\n\n    const bodyPlaceholder = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SorterApp-bodyplaceholder\",\n      children: \"Select Algorithm(s) to add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: header\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: body.length ? body : bodyPlaceholder\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SorterApp;","map":{"version":3,"sources":["/Users/marcusgee/Desktop/Projects/algorithms/src/sorter/SorterApp.js"],"names":["React","AlgoPicker","Slider","AlgoContainer","SLIDER_MIN","SLIDER_MAX","SLIDER_STEP","SLIDER_DEFAULT","MIN_BLOCK_LENGTH","MAX_BLOCK_LENGTH","ALGORITHMS","SorterApp","Component","constructor","state","selected","blockNumber","array","Array","map","Math","floor","random","handleAlgorithmClick","bind","handleSliderChange","value","some","item","setState","filter","event","target","render","header","body","algorithm","index","slice","bodyPlaceholder","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AlgoPicker from \"./AlgoPicker/AlgoPicker.js\";\nimport Slider from \"./Slider/Slider.js\";\nimport AlgoContainer from \"./AlgoContainer/AlgoContainer.js\";\nimport \"./SorterApp.css\";\n\nconst SLIDER_MIN = 100;\nconst SLIDER_MAX = 2000;\nconst SLIDER_STEP = 10;\nconst SLIDER_DEFAULT = SLIDER_MAX / 2;\n\nconst MIN_BLOCK_LENGTH = 10;\nconst MAX_BLOCK_LENGTH = 500;\n\nconst ALGORITHMS = [\n  \"Bubble\",\n  \"Bucket\",\n  \"Heap\",\n  \"Insertion\",\n  \"Merge\",\n  \"Quick\",\n  \"Radix\",\n  \"Selection\",\n];\n\nclass SorterApp extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      selected: [],\n      blockNumber: SLIDER_DEFAULT,\n      array: [...Array(SLIDER_MAX)].map(() =>\n        Math.floor(Math.random() * MAX_BLOCK_LENGTH)\n      ),\n    };\n    this.handleAlgorithmClick = this.handleAlgorithmClick.bind(this);\n    this.handleSliderChange = this.handleSliderChange.bind(this);\n  }\n\n  handleAlgorithmClick(value) {\n    if (this.state.selected.some((item) => item === value)) {\n      this.setState({\n        selected: this.state.selected.filter((item) => item !== value),\n      });\n    } else {\n      this.setState({ selected: [...this.state.selected, value] });\n    }\n  }\n\n  handleSliderChange(event) {\n    this.setState({ blockNumber: event.target.value });\n  }\n\n  render() {\n    const header = (\n      <div className=\"SorterApp-header\">\n        <h1 className=\"SorterApp-title\">Sorter</h1>\n        <AlgoPicker\n          algorithms={ALGORITHMS}\n          selected={this.state.selected}\n          handleAlgorithmClick={this.handleAlgorithmClick}\n        />\n        <Slider\n          slider_value={this.state.blockNumber}\n          slider_min={SLIDER_MIN}\n          slider_max={SLIDER_MAX}\n          slider_default={SLIDER_DEFAULT}\n          slider_step={SLIDER_STEP}\n          handleSliderChange={this.handleSliderChange}\n        />\n      </div>\n    );\n\n    const body = this.state.selected.map((algorithm, index) => {\n      return (\n        <AlgoContainer\n          name={algorithm}\n          array={this.state.array.slice(0, this.state.blockNumber)}\n          key={index}\n        />\n      );\n    });\n\n    const bodyPlaceholder = (\n      <div className=\"SorterApp-bodyplaceholder\">\n        Select Algorithm(s) to add\n      </div>\n    );\n\n    return (\n      <div>\n        <>{header}</>\n        <>{body.length ? body : bodyPlaceholder}</>\n      </div>\n    );\n  }\n}\n\nexport default SorterApp;\n"]},"metadata":{},"sourceType":"module"}