[{"/Users/marcusgee/Desktop/Projects/algorithms/src/index.js":"1","/Users/marcusgee/Desktop/Projects/algorithms/src/sorter/SorterApp.js":"2","/Users/marcusgee/Desktop/Projects/algorithms/src/sorter/AlgoPicker/AlgoPicker.js":"3","/Users/marcusgee/Desktop/Projects/algorithms/src/sorter/Slider/Slider.js":"4","/Users/marcusgee/Desktop/Projects/algorithms/src/sorter/AlgoContainer/AlgoContainer.js":"5","/Users/marcusgee/Desktop/Projects/algorithms/src/App.js":"6"},{"size":312,"mtime":1619257230925,"results":"7","hashOfConfig":"8"},{"size":2416,"mtime":1619253983389,"results":"9","hashOfConfig":"8"},{"size":817,"mtime":1619218673359,"results":"10","hashOfConfig":"8"},{"size":979,"mtime":1619218007601,"results":"11","hashOfConfig":"8"},{"size":932,"mtime":1619246833055,"results":"12","hashOfConfig":"8"},{"size":927,"mtime":1619257524053,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ao1jk3",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/marcusgee/Desktop/Projects/algorithms/src/index.js",[],"/Users/marcusgee/Desktop/Projects/algorithms/src/sorter/SorterApp.js",["31"],"import React from \"react\";\nimport AlgoPicker from \"./AlgoPicker/AlgoPicker.js\";\nimport Slider from \"./Slider/Slider.js\";\nimport AlgoContainer from \"./AlgoContainer/AlgoContainer.js\";\nimport \"./SorterApp.css\";\n\nconst SLIDER_MIN = 100;\nconst SLIDER_MAX = 2000;\nconst SLIDER_STEP = 10;\nconst SLIDER_DEFAULT = SLIDER_MAX / 2;\n\nconst MIN_BLOCK_LENGTH = 10;\nconst MAX_BLOCK_LENGTH = 500;\n\nconst ALGORITHMS = [\n  \"Bubble\",\n  \"Bucket\",\n  \"Heap\",\n  \"Insertion\",\n  \"Merge\",\n  \"Quick\",\n  \"Radix\",\n  \"Selection\",\n];\n\nclass SorterApp extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      selected: [],\n      blockNumber: SLIDER_DEFAULT,\n      array: [...Array(SLIDER_MAX)].map(() =>\n        Math.floor(Math.random() * MAX_BLOCK_LENGTH)\n      ),\n    };\n    this.handleAlgorithmClick = this.handleAlgorithmClick.bind(this);\n    this.handleSliderChange = this.handleSliderChange.bind(this);\n  }\n\n  handleAlgorithmClick(value) {\n    if (this.state.selected.some((item) => item === value)) {\n      this.setState({\n        selected: this.state.selected.filter((item) => item !== value),\n      });\n    } else {\n      this.setState({ selected: [...this.state.selected, value] });\n    }\n  }\n\n  handleSliderChange(event) {\n    this.setState({ blockNumber: event.target.value });\n  }\n\n  render() {\n    const header = (\n      <div className=\"SorterApp-header\">\n        <h1 className=\"SorterApp-title\">Sorter</h1>\n        <AlgoPicker\n          algorithms={ALGORITHMS}\n          selected={this.state.selected}\n          handleAlgorithmClick={this.handleAlgorithmClick}\n        />\n        <Slider\n          slider_value={this.state.blockNumber}\n          slider_min={SLIDER_MIN}\n          slider_max={SLIDER_MAX}\n          slider_default={SLIDER_DEFAULT}\n          slider_step={SLIDER_STEP}\n          handleSliderChange={this.handleSliderChange}\n        />\n      </div>\n    );\n\n    const body = this.state.selected.map((algorithm, index) => {\n      return (\n        <AlgoContainer\n          name={algorithm}\n          array={this.state.array.slice(0, this.state.blockNumber)}\n          key={index}\n        />\n      );\n    });\n\n    const bodyPlaceholder = (\n      <div className=\"SorterApp-bodyplaceholder\">\n        Select Algorithm(s) to add\n      </div>\n    );\n\n    return (\n      <div>\n        <>{header}</>\n        <>{body.length ? body : bodyPlaceholder}</>\n      </div>\n    );\n  }\n}\n\nexport default SorterApp;\n",["32","33"],"/Users/marcusgee/Desktop/Projects/algorithms/src/sorter/AlgoPicker/AlgoPicker.js",["34"],"import React from \"react\";\nimport \"./AlgoPicker.css\";\n\nclass AlgoPicker extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"AlgoPicker-container\">\n        <p>Algorithms:</p>\n        {this.props.algorithms.map((algorithm, index) => {\n          return (\n            <button\n              className={\n                this.props.selected.some((item) => item === algorithm)\n                  ? \"AlgoPicker-name AlgoPicker-active\"\n                  : \"AlgoPicker-name AlgoPicker-inactive\"\n              }\n              key={index}\n              onClick={() => this.props.handleAlgorithmClick(algorithm)}\n            >\n              {`${algorithm} Sort`}\n            </button>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default AlgoPicker;\n","/Users/marcusgee/Desktop/Projects/algorithms/src/sorter/Slider/Slider.js",["35"],"import React from \"react\";\nimport \"./Slider.css\";\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"Slider-container\">\n        <span>\n          <p>\n            Number of Blocks:{\" \"}\n            {\n              <input\n                className=\"Slider-numberinput\"\n                type=\"number\"\n                min={this.props.slider_min}\n                max={this.props.slider_max}\n                value={this.props.slider_value}\n                onChange={this.props.handleSliderChange}\n              />\n            }\n          </p>\n        </span>\n\n        <input\n          className=\"Slider-slider\"\n          type=\"range\"\n          min={this.props.slider_min}\n          max={this.props.slider_max}\n          step={this.props.slider_step}\n          value={this.props.slider_value}\n          onChange={this.props.handleSliderChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","/Users/marcusgee/Desktop/Projects/algorithms/src/sorter/AlgoContainer/AlgoContainer.js",["36"],"import React from \"react\";\nimport \"./AlgoContainer.css\";\n\nclass AlgoContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"AlgoContainer-container\">\n        <div className=\"AlgoContainer-info\">\n          <h3>{`${this.props.name} Sort`}</h3>\n          <h5>0.00ms</h5>\n        </div>\n        <div className=\"AlgoContainer-blocks\">\n          {\n            (console.log(this.props.array),\n            this.props.array.map((value, index) => {\n              return (\n                <div\n                  className=\"AlgoContainer-block\"\n                  style={{\n                    height: `${value}px`,\n                    width: `${100 / this.props.array.length}%`,\n                  }}\n                  key={index}\n                ></div>\n              );\n            }))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AlgoContainer;\n","/Users/marcusgee/Desktop/Projects/algorithms/src/App.js",[],{"ruleId":"37","severity":1,"message":"38","line":12,"column":7,"nodeType":"39","messageId":"40","endLine":12,"endColumn":23},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":5,"column":3,"nodeType":"47","messageId":"48","endLine":7,"endColumn":4},{"ruleId":"45","severity":1,"message":"46","line":5,"column":3,"nodeType":"47","messageId":"48","endLine":7,"endColumn":4},{"ruleId":"45","severity":1,"message":"46","line":5,"column":3,"nodeType":"47","messageId":"48","endLine":7,"endColumn":4},"no-unused-vars","'MIN_BLOCK_LENGTH' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]