[{"/Users/marcusgee/Desktop/Projects.nosync/algorithms/src/index.js":"1","/Users/marcusgee/Desktop/Projects.nosync/algorithms/src/App.js":"2","/Users/marcusgee/Desktop/Projects.nosync/algorithms/src/sorter/SorterApp.js":"3","/Users/marcusgee/Desktop/Projects.nosync/algorithms/src/sorter/AlgoContainer/AlgoContainer.js":"4","/Users/marcusgee/Desktop/Projects.nosync/algorithms/src/sorter/Slider/Slider.js":"5","/Users/marcusgee/Desktop/Projects.nosync/algorithms/src/sorter/AlgoPicker/AlgoPicker.js":"6"},{"size":312,"mtime":1619257230925,"results":"7","hashOfConfig":"8"},{"size":1007,"mtime":1619329579229,"results":"9","hashOfConfig":"8"},{"size":3455,"mtime":1619409697417,"results":"10","hashOfConfig":"8"},{"size":906,"mtime":1619409740986,"results":"11","hashOfConfig":"8"},{"size":1016,"mtime":1619408036438,"results":"12","hashOfConfig":"8"},{"size":778,"mtime":1619403133262,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2tpx36",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},"/Users/marcusgee/Desktop/Projects.nosync/algorithms/src/index.js",[],"/Users/marcusgee/Desktop/Projects.nosync/algorithms/src/App.js",[],"/Users/marcusgee/Desktop/Projects.nosync/algorithms/src/sorter/SorterApp.js",["29"],"/Users/marcusgee/Desktop/Projects.nosync/algorithms/src/sorter/AlgoContainer/AlgoContainer.js",["30"],"/Users/marcusgee/Desktop/Projects.nosync/algorithms/src/sorter/Slider/Slider.js",["31"],"import React from \"react\";\nimport \"./Slider.css\";\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <span\n          style={{\n            whiteSpace: \"pre\",\n          }}\n        >\n          <p>\n            Number of Blocks:{\" \"}\n            {\n              <input\n                className=\"Slider-numberinput\"\n                type=\"number\"\n                min={this.props.slider_min}\n                max={this.props.slider_max}\n                value={this.props.slider_value}\n                onChange={this.props.handleSliderChange}\n              />\n            }\n          </p>\n        </span>\n\n        <input\n          className=\"Slider-slider\"\n          type=\"range\"\n          min={this.props.slider_min}\n          max={this.props.slider_max}\n          step={this.props.slider_step}\n          value={this.props.slider_value}\n          onChange={this.props.handleSliderChange}\n        />\n      </>\n    );\n  }\n}\n\nexport default Slider;\n",["32","33"],"/Users/marcusgee/Desktop/Projects.nosync/algorithms/src/sorter/AlgoPicker/AlgoPicker.js",["34"],"import React from \"react\";\nimport \"./AlgoPicker.css\";\n\nclass AlgoPicker extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <p>Algorithms:</p>\n        {this.props.algorithms.map((algorithm, index) => {\n          return (\n            <button\n              className={\n                this.props.selected.some((item) => item === algorithm)\n                  ? \"AlgoPicker-name AlgoPicker-active\"\n                  : \"AlgoPicker-name AlgoPicker-inactive\"\n              }\n              key={index}\n              onClick={() => this.props.handleAlgorithmClick(algorithm)}\n            >\n              {`${algorithm} Sort`}\n            </button>\n          );\n        })}\n      </>\n    );\n  }\n}\n\nexport default AlgoPicker;\n",{"ruleId":"35","severity":1,"message":"36","line":12,"column":7,"nodeType":"37","messageId":"38","endLine":12,"endColumn":23},{"ruleId":"39","severity":1,"message":"40","line":5,"column":3,"nodeType":"41","messageId":"42","endLine":7,"endColumn":4},{"ruleId":"39","severity":1,"message":"40","line":5,"column":3,"nodeType":"41","messageId":"42","endLine":7,"endColumn":4},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"39","severity":1,"message":"40","line":5,"column":3,"nodeType":"41","messageId":"42","endLine":7,"endColumn":4},"no-unused-vars","'MIN_BLOCK_LENGTH' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-global-assign","no-unsafe-negation"]