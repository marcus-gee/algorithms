{"version":3,"sources":["sorter/AlgoPicker/AlgoPicker.jsx","sorter/Slider/Slider.jsx","sorter/AlgoContainer/AlgoContainer.jsx","sorter/SorterApp.jsx","App.jsx","index.jsx"],"names":["AlgoPicker","props","algorithms","selected","handleAlgorithmClick","map","algorithm","index","className","some","item","onClick","Slider","slider_value","slider_min","slider_max","slider_step","handleSliderChange","type","min","max","value","onChange","step","AlgoContainer","name","array","style","height","width","length","SLIDER_MAX","ALGORITHMS","SorterApp","useState","setSelected","blockNumber","setBlockNumber","setArray","resetArray","Array","Math","floor","random","useEffect","filter","event","target","console","log","slice","App","to","exact","path","React","Component","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.959f7a8e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./AlgoPicker.css\";\n\nfunction AlgoPicker(props) {\n  const { algorithms, selected, handleAlgorithmClick } = props;\n\n  return (\n    <>\n      <p>Algorithms:</p>\n      {algorithms.map((algorithm, index) => (\n        <button\n          className={\n            selected.some((item) => item === algorithm)\n              ? \"AlgoPicker-name AlgoPicker-active\"\n              : \"AlgoPicker-name AlgoPicker-inactive\"\n          }\n          key={index}\n          onClick={() => handleAlgorithmClick(algorithm)}\n        >\n          {`${algorithm} Sort`}\n        </button>\n      ))}\n    </>\n  );\n}\n\nexport default AlgoPicker;\n","import React from \"react\";\nimport \"./Slider.css\";\n\nfunction Slider(props) {\n  const {\n    slider_value,\n    slider_min,\n    slider_max,\n    slider_step,\n    handleSliderChange,\n  } = props;\n\n  return (\n    <>\n      <span>\n        Number of Blocks:{\" \"}\n        {\n          <input\n            className=\"Slider-numberinput\"\n            type=\"number\"\n            min={slider_min}\n            max={slider_max}\n            value={slider_value}\n            onChange={handleSliderChange}\n          />\n        }\n      </span>\n\n      <input\n        className=\"Slider-slider\"\n        type=\"range\"\n        min={slider_min}\n        max={slider_max}\n        step={slider_step}\n        value={slider_value}\n        onChange={handleSliderChange}\n      />\n    </>\n  );\n}\n\nexport default Slider;\n","import React from \"react\";\nimport \"./AlgoContainer.css\";\n\nfunction AlgoContainer(props) {\n  const { name, array } = props;\n\n  return (\n    <div className=\"AlgoContainer-container\">\n      <div className=\"AlgoContainer-info\">\n        <h3>{`${name} Sort`}</h3>\n        <h5>0.00ms</h5>\n      </div>\n      <button className=\"AlgoContainer-runbutton\">Run</button>\n      <div className=\"AlgoContainer-blocks\">\n        {array.map((value, index) => (\n          <div\n            className=\"AlgoContainer-block\"\n            style={{\n              height: `${value}px`,\n              width: `${100 / array.length}%`,\n            }}\n            key={index}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default AlgoContainer;\n","import React, { useState, useEffect } from \"react\";\nimport AlgoPicker from \"./AlgoPicker/AlgoPicker.jsx\";\nimport Slider from \"./Slider/Slider.jsx\";\nimport AlgoContainer from \"./AlgoContainer/AlgoContainer.jsx\";\nimport \"./SorterApp.css\";\n\nconst SLIDER_MIN = 100;\nconst SLIDER_MAX = 2000;\nconst SLIDER_STEP = 10;\nconst SLIDER_DEFAULT = SLIDER_MAX / 2;\n\nconst MIN_BLOCK_LENGTH = 10;\nconst MAX_BLOCK_LENGTH = 500;\n\nconst ALGORITHMS = [\n  \"Bubble\",\n  \"Bucket\",\n  \"Heap\",\n  \"Insertion\",\n  \"Merge\",\n  \"Quick\",\n  \"Radix\",\n  \"Selection\",\n];\n\nfunction SorterApp() {\n  const [selected, setSelected] = useState([]);\n  const [blockNumber, setBlockNumber] = useState(SLIDER_DEFAULT);\n  const [array, setArray] = useState([]);\n\n  useEffect(resetArray, []);\n\n  function handleAlgorithmClick(value) {\n    if (selected.some((item) => item === value)) {\n      setSelected(selected.filter((item) => item !== value));\n    } else {\n      setSelected([...selected, value]);\n    }\n  }\n\n  function handleSliderChange(event) {\n    setBlockNumber(event.target.value);\n  }\n\n  function resetArray() {\n    setArray(\n      [...Array(SLIDER_MAX)].map(() =>\n        Math.floor(Math.random() * MAX_BLOCK_LENGTH)\n      )\n    );\n  }\n\n  return (\n    <>\n      <div className=\"SorterApp-header\">\n        <h1 className=\"SorterApp-title\">Sorter</h1>\n        <div className=\"SorterApp-headerbuttons\">\n          <div className=\"SorterApp-algopickercontainer\">\n            <AlgoPicker\n              algorithms={ALGORITHMS}\n              selected={selected}\n              handleAlgorithmClick={handleAlgorithmClick}\n            />\n          </div>\n          <div className=\"right-wrap\">\n            <div className=\"SorterApp-slidercontainer\">\n              <Slider\n                slider_value={blockNumber}\n                slider_min={SLIDER_MIN}\n                slider_max={SLIDER_MAX}\n                slider_step={SLIDER_STEP}\n                handleSliderChange={handleSliderChange}\n              />\n            </div>\n            <div className=\"SorterApp-actionbuttonscontainer\">\n              <button\n                className=\"SorterApp-actionbutton run\"\n                onClick={() => console.log(\"run\")}\n              >\n                Run All\n              </button>\n              <button\n                className=\"SorterApp-actionbutton reset\"\n                onClick={() => {\n                  resetArray();\n                }}\n              >\n                Reset All\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      {selected.length ? (\n        selected.map((algorithm, index) => (\n          <AlgoContainer\n            name={algorithm}\n            array={array.slice(0, blockNumber)}\n            key={index}\n          />\n        ))\n      ) : (\n        <div className=\"SorterApp-bodyplaceholder\">\n          Select Algorithm(s) to add\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default SorterApp;\n","import React from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport SorterApp from \"./sorter/SorterApp\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-nav\">\n          <Link to=\"/\" className=\"link\">\n            Home\n          </Link>\n          <Link to=\"/sorter\" className=\"link\">\n            Sorter\n          </Link>\n          <Link to=\"/pathfinder\" className=\"link\">\n            Pathfinder\n          </Link>\n        </div>\n        <Switch>\n          <Route exact path=\"/\">\n            <div>\n              <h2>Home</h2>\n            </div>\n          </Route>\n          <Route path=\"/sorter\">\n            <SorterApp />\n          </Route>\n          <Route path=\"/pathfinder\">\n            <div>\n              <h2>Pathfinder</h2>\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/algorithms\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}