{"version":3,"sources":["sorter/AlgoPicker/AlgoPicker.jsx","sorter/Slider/Slider.jsx","sorter/AlgoContainer/AlgoContainer.jsx","sorter/sortingAlgorithms.js","sorter/SorterApp.jsx","App.jsx","index.jsx"],"names":["AlgoPicker","props","algorithms","selected","handleAlgorithmClick","map","algorithm","index","className","some","item","onClick","Slider","slider_value","slider_min","slider_max","slider_step","handleSliderChange","type","min","max","value","onChange","step","AlgoContainer","name","array","sortingAlgorithm","localArray","blocksContainerRef","useRef","animateSort","forEach","barIndices","setTimeout","i","blocks","current","children","style","backgroundColor","DELAY","animateComparison","indices","j","height","iHeight","jHeight","animateSwap","ref","width","length","insertionSort","animations","arr","n","push","swap","index1","index2","temp","ALGORITHMS","Bubble","Bucket","val","bucketCount","Math","floor","buckets","Array","sortedArray","bucket","sortedBucket","concat","Heap","heapify","size","left","right","Insertion","Merge","Quick","quickSort","start","end","partition","pivotIdx","pivotVal","Radix","getNum","idx","strNum","toString","num","undefined","maxLength","longest","longestNum","k","flat","Selection","smallest","SorterApp","useState","setSelected","SLIDER_MAX","blockNumber","setBlockNumber","setArray","resetArray","random","useEffect","Object","keys","filter","event","target","disabled","console","log","slice","App","to","exact","path","React","Component","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.8674d1b3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./AlgoPicker.css\";\n\nfunction AlgoPicker(props) {\n  const { algorithms, selected, handleAlgorithmClick } = props;\n\n  return (\n    <>\n      <p>Algorithms:</p>\n      {algorithms.map((algorithm, index) => (\n        <button\n          className={\n            selected.some((item) => item === algorithm)\n              ? \"AlgoPicker-name AlgoPicker-active\"\n              : \"AlgoPicker-name AlgoPicker-inactive\"\n          }\n          key={index}\n          onClick={() => handleAlgorithmClick(algorithm)}\n        >\n          {`${algorithm} Sort`}\n        </button>\n      ))}\n    </>\n  );\n}\n\nexport default AlgoPicker;\n","import React from \"react\";\nimport \"./Slider.css\";\n\nfunction Slider(props) {\n  const {\n    slider_value,\n    slider_min,\n    slider_max,\n    slider_step,\n    handleSliderChange,\n  } = props;\n\n  return (\n    <>\n      <span>\n        Number of Blocks:{\" \"}\n        {\n          <input\n            className=\"Slider-numberinput\"\n            type=\"number\"\n            min={slider_min}\n            max={slider_max}\n            value={slider_value}\n            onChange={handleSliderChange}\n          />\n        }\n      </span>\n\n      <input\n        className=\"Slider-slider\"\n        type=\"range\"\n        min={slider_min}\n        max={slider_max}\n        step={slider_step}\n        value={slider_value}\n        onChange={handleSliderChange}\n      />\n    </>\n  );\n}\n\nexport default Slider;\n","import { React, useRef } from \"react\";\nimport \"./AlgoContainer.css\";\n\nconst DELAY = 1;\n\nfunction AlgoContainer(props) {\n  const { name, array, sortingAlgorithm } = props;\n  let localArray = [...array];\n  const blocksContainerRef = useRef(null);\n\n  function animateSort(sortingAlgorithm, array) {\n    const animations = sortingAlgorithm(array);\n\n    animations.forEach(([barIndices, type], index) => {\n      setTimeout(() => {\n        if (type === \"comparison\") {\n          barIndices.map((i) => animateComparison(i));\n        } else if (type === \"swap\") {\n          animateSwap(barIndices);\n        }\n      }, index * DELAY);\n    });\n  }\n\n  function animateComparison(index) {\n    const blocks = blocksContainerRef.current.children;\n\n    setTimeout(() => {\n      const style = blocks[index].style;\n      style.backgroundColor = \"red\";\n    }, DELAY);\n    setTimeout(() => {\n      const style = blocks[index].style;\n      style.backgroundColor = \"\";\n    }, DELAY * 2);\n  }\n\n  function animateSwap(indices) {\n    const blocks = blocksContainerRef.current.children;\n    const [i, j] = indices;\n    const [iHeight, jHeight] = [blocks[i].style.height, blocks[j].style.height];\n\n    const iStyle = blocks[i].style;\n    iStyle.height = jHeight;\n    const jStyle = blocks[j].style;\n    jStyle.height = iHeight;\n  }\n\n  return (\n    <div className=\"AlgoContainer-container\">\n      <div className=\"AlgoContainer-info\">\n        <h3>{`${name} Sort`}</h3>\n        <h5>0.00ms</h5>\n      </div>\n      <button\n        className=\"AlgoContainer-runbutton\"\n        onClick={() => {\n          animateSort(sortingAlgorithm, localArray);\n        }}\n      >\n        Run\n      </button>\n      <div className=\"AlgoContainer-blocks\" ref={blocksContainerRef}>\n        {localArray.map((value, index) => (\n          <div\n            className=\"AlgoContainer-block\"\n            style={{\n              height: `${value}px`,\n              width: `${100 / localArray.length}%`,\n            }}\n            key={index}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default AlgoContainer;\n","// good\nexport function bubbleSort(array) {\n  // O(n^2)\n  let animations = [];\n  let arr = [...array]; // copy array to not change original\n\n  let n = arr.length;\n  for (var i = 0; i < n - 1; i++) {\n    for (var j = 0; j < n - i - 1; j++) {\n      animations.push([[j, j + 1], \"comparison\"]);\n      if (arr[j] > arr[j + 1]) {\n        swap(arr, j, j + 1);\n        animations.push([[j, j + 1], \"swap\"]);\n      }\n    }\n  }\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\nexport function bucketSort(array) {\n  // O(n^2)\n  let arr = [...array]; // copy array to not change original\n\n  let min = arr[0];\n  let max = arr[0];\n  let bucketSize = 5;\n\n  arr.forEach((val) => {\n    if (val < min) {\n      min = val;\n    } else if (val > max) {\n      max = val;\n    }\n  });\n\n  // init buckets\n  let bucketCount = Math.floor((max - min) / bucketSize) + 1;\n  var buckets = new Array(bucketCount);\n\n  for (var i = 0; i < bucketCount; i++) {\n    buckets[i] = [];\n  }\n\n  // add values to buckets\n  arr.forEach((val) => {\n    buckets[Math.floor((val - min) / bucketSize)].push(val);\n  });\n\n  // sort buckets w/ insertionSort\n  let sortedArray = [];\n  buckets.forEach((bucket) => {\n    let sortedBucket = insertionSort(bucket);\n    sortedArray = sortedArray.concat(sortedBucket);\n  });\n\n  return sortedArray;\n}\n\n/* -------------------------------------------------------------------------- */\n\nexport function heapSort(array) {\n  // O(n log(n))\n  let arr = [...array]; // copy array to not change original\n\n  const heapify = (arr, size, i) => {\n    let max = i;\n    let left = 2 * i + 1; // left child idx\n    let right = 2 * i + 2; // right child idx\n\n    // left child is not last and value is bigger than root\n    if (left < size && arr[left] > arr[max]) {\n      max = left;\n    }\n    // left child is not last and value is bigger than root\n    if (right < size && arr[right] > arr[max]) {\n      max = right;\n    }\n    if (max !== i) {\n      swap(arr, i, max);\n      heapify(arr, size, max);\n    }\n  };\n\n  let n = arr.length;\n  // create heap\n  for (var i = Math.floor(n / 2 - 1); i >= 0; i--) {\n    heapify(arr, n, i);\n  }\n\n  for (i = n - 1; i >= 0; i--) {\n    swap(arr, 0, i);\n    heapify(arr, i, 0);\n  }\n\n  return arr;\n}\n\n/* -------------------------------------------------------------------------- */\n\n// good\nexport function insertionSort(array) {\n  // O(n^2)\n  let animations = [];\n  let arr = [...array]; // copy array to not change original\n\n  let n = arr.length;\n  for (var i = 1; i < n; i++) {\n    for (var j = i - 1; j > -1; j--) {\n      animations.push([[j, j + 1], \"comparison\"]);\n      if (arr[j] > arr[j + 1]) {\n        swap(arr, j, j + 1);\n        animations.push([[j, j + 1], \"swap\"]);\n      } else break;\n    }\n  }\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\nexport function mergeSort(array) {\n  // O(n log(n))\n  let arr = [...array]; // copy array to not change original\n\n  // todo\n}\n\n/* -------------------------------------------------------------------------- */\n\n// good\nexport function quickSort(\n  array,\n  start = 0,\n  end = array.length - 1,\n  animations = []\n) {\n  // O(n^2)\n  let arr = [...array]; // copy array to not change original\n\n  // recursive implementation\n  const partition = (arr, start, end, animations) => {\n    const pivotIdx = Math.floor((start + end) / 2);\n    const pivotVal = arr[pivotIdx];\n    while (start <= end) {\n      while (arr[start] < pivotVal) {\n        animations.push([[start, pivotIdx], \"comparison\"]);\n        start++;\n      }\n      while (arr[end] > pivotVal) {\n        animations.push([[end, pivotIdx], \"comparison\"]);\n        end--;\n      }\n      animations.push([[start, end], \"comparison\"]);\n      if (start <= end) {\n        swap(arr, start, end);\n        animations.push([[start, end], \"swap\"]);\n\n        start++;\n        end--;\n      }\n    }\n    return start;\n  };\n\n  if (start >= end) {\n    return;\n  }\n  let index = partition(arr, start, end, animations);\n\n  if (start < index - 1) {\n    quickSort(arr, start, index - 1, animations);\n  }\n  if (index < end) {\n    quickSort(arr, index, end, animations);\n  }\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\nexport function radixSort(array) {\n  // O(nk)\n  let arr = [...array]; // copy array to not change original\n\n  const getNum = (val, idx) => {\n    const strNum = val.toString();\n    let end = strNum.length - 1;\n    const num = strNum[end - idx];\n    return num === undefined ? 0 : num;\n  };\n  const longestNum = (arr) => {\n    let longest = \"0\";\n    arr.forEach((num) => {\n      const strNum = num.toString();\n      if (strNum.length > longest.length) {\n        longest = strNum;\n      }\n    });\n    return longest.length;\n  };\n\n  let maxLength = longestNum(arr);\n  for (var i = 0; i < maxLength; i++) {\n    const bucketCount = 10;\n    var buckets = new Array(bucketCount);\n    for (var k = 0; k < bucketCount; k++) {\n      buckets[k] = [];\n    }\n\n    for (var j = 0; j < arr.length; j++) {\n      let num = getNum(arr[j], i);\n      if (num !== undefined) {\n        buckets[num].push(arr[j]);\n      }\n    }\n    arr = buckets.flat();\n  }\n\n  return arr;\n}\n\n/* -------------------------------------------------------------------------- */\n\n// good\nexport function selectionSort(array) {\n  // O(n^2)\n  let animations = [];\n  let arr = [...array]; // copy array to not change original\n\n  // O(n^2)\n  let n = arr.length;\n  for (var i = 0; i < n; i++) {\n    let smallest = i;\n    for (var j = i + 1; j < n; j++) {\n      animations.push([[j, smallest], \"comparison\"]);\n      if (arr[j] < arr[smallest]) {\n        smallest = j;\n      }\n    }\n    if (smallest !== i) {\n      swap(arr, i, smallest);\n      animations.push([[i, smallest], \"swap\"]);\n    }\n  }\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\nfunction swap(array, index1, index2) {\n  const temp = array[index1];\n  array[index1] = array[index2];\n  array[index2] = temp;\n}\n","import React, { useState, useEffect } from \"react\";\nimport AlgoPicker from \"./AlgoPicker/AlgoPicker.jsx\";\nimport Slider from \"./Slider/Slider.jsx\";\nimport AlgoContainer from \"./AlgoContainer/AlgoContainer.jsx\";\nimport {\n  bubbleSort,\n  bucketSort,\n  heapSort,\n  insertionSort,\n  mergeSort,\n  quickSort,\n  radixSort,\n  selectionSort,\n} from \"./sortingAlgorithms\";\nimport \"./SorterApp.css\";\n\nconst SLIDER_MIN = 10;\nconst SLIDER_MAX = 500;\nconst SLIDER_STEP = 10;\nconst SLIDER_DEFAULT = SLIDER_MAX / 2;\n\nconst MIN_BLOCK_LENGTH = 10;\nconst MAX_BLOCK_LENGTH = 500;\n\nconst ALGORITHMS = {\n  Bubble: bubbleSort,\n  Bucket: bucketSort,\n  Heap: heapSort,\n  Insertion: insertionSort,\n  Merge: mergeSort,\n  Quick: quickSort,\n  Radix: radixSort,\n  Selection: selectionSort,\n};\n\nfunction SorterApp() {\n  const [selected, setSelected] = useState([]);\n  const [blockNumber, setBlockNumber] = useState(SLIDER_DEFAULT);\n  const [array, setArray] = useState([]);\n\n  useEffect(resetArray, []);\n\n  function handleAlgorithmClick(value) {\n    if (selected.some((item) => item === value)) {\n      setSelected(selected.filter((item) => item !== value));\n    } else {\n      setSelected([...selected, value]);\n    }\n  }\n\n  function handleSliderChange(event) {\n    setBlockNumber(event.target.value);\n  }\n\n  function resetArray() {\n    setArray(\n      [...Array(SLIDER_MAX)].map(() =>\n        Math.floor(Math.random() * MAX_BLOCK_LENGTH)\n      )\n    );\n  }\n\n  return (\n    <>\n      <div className=\"SorterApp-header\">\n        <h1 className=\"SorterApp-title\">Sorter</h1>\n        <div className=\"SorterApp-headerbuttons\">\n          <div className=\"SorterApp-algopickercontainer\">\n            <AlgoPicker\n              algorithms={Object.keys(ALGORITHMS)}\n              selected={selected}\n              handleAlgorithmClick={handleAlgorithmClick}\n            />\n          </div>\n          <div className=\"right-wrap\">\n            <div className=\"SorterApp-slidercontainer\">\n              <Slider\n                slider_value={blockNumber}\n                slider_min={SLIDER_MIN}\n                slider_max={SLIDER_MAX}\n                slider_step={SLIDER_STEP}\n                handleSliderChange={handleSliderChange}\n              />\n            </div>\n            <div className=\"SorterApp-actionbuttonscontainer\">\n              <button\n                className=\"SorterApp-actionbutton run\"\n                disabled={true} // todo: here\n                onClick={() => console.log(\"run all\")}\n              >\n                Run All\n              </button>\n              <button\n                className=\"SorterApp-actionbutton reset\"\n                onClick={() => {\n                  resetArray();\n                }}\n              >\n                Reset All\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      {selected.length ? (\n        selected.map((algorithm, index) => (\n          <AlgoContainer\n            name={algorithm}\n            array={array.slice(0, blockNumber)}\n            sortingAlgorithm={ALGORITHMS[algorithm]}\n            key={index}\n          />\n        ))\n      ) : (\n        <div className=\"SorterApp-bodyplaceholder\">\n          Select Algorithm(s) to add\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default SorterApp;\n","import React from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport SorterApp from \"./sorter/SorterApp\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-nav\">\n          <Link to=\"/\" className=\"link\">\n            Home\n          </Link>\n          <Link to=\"/sorter\" className=\"link\">\n            Sorter\n          </Link>\n          <Link to=\"/pathfinder\" className=\"link\">\n            Pathfinder\n          </Link>\n        </div>\n        <Switch>\n          <Route exact path=\"/\">\n            <div>\n              <h2>Home</h2>\n            </div>\n          </Route>\n          <Route path=\"/sorter\">\n            <SorterApp />\n          </Route>\n          <Route path=\"/pathfinder\">\n            <div>\n              <h2>Pathfinder</h2>\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/algorithms\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}