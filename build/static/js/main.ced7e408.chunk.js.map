{"version":3,"sources":["sorter/AlgoPicker/AlgoPicker.js","sorter/Slider/Slider.js","sorter/AlgoContainer/AlgoContainer.js","sorter/SorterApp.js","App.js","index.js"],"names":["AlgoPicker","props","className","this","algorithms","map","algorithm","index","selected","some","item","onClick","handleAlgorithmClick","React","Component","Slider","type","min","slider_min","max","slider_max","value","slider_value","onChange","handleSliderChange","step","slider_step","AlgoContainer","name","console","log","array","style","height","width","length","SLIDER_MAX","ALGORITHMS","SorterApp","state","blockNumber","Array","Math","floor","random","bind","setState","filter","event","target","header","slider_default","body","slice","bodyPlaceholder","App","class","to","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ced7e408.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./AlgoPicker.css\";\n\nclass AlgoPicker extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"AlgoPicker-container\">\n        <p>Algorithms:</p>\n        {this.props.algorithms.map((algorithm, index) => {\n          return (\n            <button\n              className={\n                this.props.selected.some((item) => item === algorithm)\n                  ? \"AlgoPicker-name AlgoPicker-active\"\n                  : \"AlgoPicker-name AlgoPicker-inactive\"\n              }\n              key={index}\n              onClick={() => this.props.handleAlgorithmClick(algorithm)}\n            >\n              {`${algorithm} Sort`}\n            </button>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default AlgoPicker;\n","import React from \"react\";\nimport \"./Slider.css\";\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"Slider-container\">\n        <span>\n          <p>\n            Number of Blocks:{\" \"}\n            {\n              <input\n                className=\"Slider-numberinput\"\n                type=\"number\"\n                min={this.props.slider_min}\n                max={this.props.slider_max}\n                value={this.props.slider_value}\n                onChange={this.props.handleSliderChange}\n              />\n            }\n          </p>\n        </span>\n\n        <input\n          className=\"Slider-slider\"\n          type=\"range\"\n          min={this.props.slider_min}\n          max={this.props.slider_max}\n          step={this.props.slider_step}\n          value={this.props.slider_value}\n          onChange={this.props.handleSliderChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","import React from \"react\";\nimport \"./AlgoContainer.css\";\n\nclass AlgoContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"AlgoContainer-container\">\n        <div className=\"AlgoContainer-info\">\n          <h3>{`${this.props.name} Sort`}</h3>\n          <h5>0.00ms</h5>\n        </div>\n        <div className=\"AlgoContainer-blocks\">\n          {\n            (console.log(this.props.array),\n            this.props.array.map((value, index) => {\n              return (\n                <div\n                  className=\"AlgoContainer-block\"\n                  style={{\n                    height: `${value}px`,\n                    width: `${100 / this.props.array.length}%`,\n                  }}\n                  key={index}\n                ></div>\n              );\n            }))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AlgoContainer;\n","import React from \"react\";\nimport AlgoPicker from \"./AlgoPicker/AlgoPicker.js\";\nimport Slider from \"./Slider/Slider.js\";\nimport AlgoContainer from \"./AlgoContainer/AlgoContainer.js\";\nimport \"./SorterApp.css\";\n\nconst SLIDER_MIN = 100;\nconst SLIDER_MAX = 2000;\nconst SLIDER_STEP = 10;\nconst SLIDER_DEFAULT = SLIDER_MAX / 2;\n\nconst MIN_BLOCK_LENGTH = 10;\nconst MAX_BLOCK_LENGTH = 500;\n\nconst ALGORITHMS = [\n  \"Bubble\",\n  \"Bucket\",\n  \"Heap\",\n  \"Insertion\",\n  \"Merge\",\n  \"Quick\",\n  \"Radix\",\n  \"Selection\",\n];\n\nclass SorterApp extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      selected: [],\n      blockNumber: SLIDER_DEFAULT,\n      array: [...Array(SLIDER_MAX)].map(() =>\n        Math.floor(Math.random() * MAX_BLOCK_LENGTH)\n      ),\n    };\n    this.handleAlgorithmClick = this.handleAlgorithmClick.bind(this);\n    this.handleSliderChange = this.handleSliderChange.bind(this);\n  }\n\n  handleAlgorithmClick(value) {\n    if (this.state.selected.some((item) => item === value)) {\n      this.setState({\n        selected: this.state.selected.filter((item) => item !== value),\n      });\n    } else {\n      this.setState({ selected: [...this.state.selected, value] });\n    }\n  }\n\n  handleSliderChange(event) {\n    this.setState({ blockNumber: event.target.value });\n  }\n\n  render() {\n    const header = (\n      <div className=\"SorterApp-header\">\n        <h1 className=\"SorterApp-title\">Sorter</h1>\n        <AlgoPicker\n          algorithms={ALGORITHMS}\n          selected={this.state.selected}\n          handleAlgorithmClick={this.handleAlgorithmClick}\n        />\n        <Slider\n          slider_value={this.state.blockNumber}\n          slider_min={SLIDER_MIN}\n          slider_max={SLIDER_MAX}\n          slider_default={SLIDER_DEFAULT}\n          slider_step={SLIDER_STEP}\n          handleSliderChange={this.handleSliderChange}\n        />\n      </div>\n    );\n\n    const body = this.state.selected.map((algorithm, index) => {\n      return (\n        <AlgoContainer\n          name={algorithm}\n          array={this.state.array.slice(0, this.state.blockNumber)}\n          key={index}\n        />\n      );\n    });\n\n    const bodyPlaceholder = (\n      <div className=\"SorterApp-bodyplaceholder\">\n        Select Algorithm(s) to add\n      </div>\n    );\n\n    return (\n      <div>\n        <>{header}</>\n        <>{body.length ? body : bodyPlaceholder}</>\n      </div>\n    );\n  }\n}\n\nexport default SorterApp;\n","import React from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport SorterApp from \"./sorter/SorterApp\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div class=\"App-nav\">\n          <Link to=\"/\" class=\"link\">\n            Home\n          </Link>\n          <Link to=\"/sorter\" class=\"link\">\n            Sorter\n          </Link>\n          <Link to=\"/pathfinder\" class=\"link\">\n            Pathfinder\n          </Link>\n        </div>\n        <Switch>\n          <Route exact path=\"/\">\n            <div>\n              <h2>Home</h2>\n            </div>\n          </Route>\n          <Route path=\"/sorter\">\n            <SorterApp />\n          </Route>\n          <Route path=\"/pathfinder\">\n            <div>\n              <h2>Pathfinder</h2>\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}