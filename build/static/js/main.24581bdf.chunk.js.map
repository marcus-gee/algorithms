{"version":3,"sources":["sorter/AlgoPicker/AlgoPicker.jsx","sorter/Slider/Slider.jsx","sorter/Utilities/sortingAlgorithmInfos.js","sorter/AlgoContainer/AlgoContainer.jsx","sorter/Utilities/sortingAlgorithms.js","sorter/SorterApp.jsx","App.jsx","index.jsx"],"names":["AlgoPicker","props","algorithms","selected","handleAlgorithmClick","map","algorithm","index","className","some","item","onClick","Slider","prompt","slider_value","slider_min","slider_max","slider_step","disabled","handleSliderChange","type","min","max","value","onChange","step","algorithmInfos","Bubble","worst","text","style","color","margin","best","average","description","Bucket","Heap","Insertion","Merge","Quick","Radix","Selection","AlgoContainer","name","array","sortingAlgorithm","delay","sortedContainers","setSortedContainers","dataIndex","localArray","blocksContainerRef","useRef","animateSort","forEach","barData","setTimeout","i","blocks","current","children","backgroundColor","animateAccess","indices","j","height","iHeight","jHeight","animateSwap","animateInsert","val","ref","width","length","insertionSort","animations","n","push","swap","index1","index2","temp","ALGORITHMS","bucketCount","Math","bucketSize","ceil","buckets","Array","bucketPointers","fill","bucketNumber","floor","bucket","indexOffset","k","bucketAnimations","barIndices","heapify","size","left","right","mergeSort","offset","console","log","mid","slice","lAnimations","rAnimations","p","q","quickSort","start","end","partition","pivotIdx","pivotVal","getNum","idx","strNum","toString","num","undefined","maxLength","longest","longestNum","flat","smallest","SorterApp","useState","setSelected","BLOCK_NUM_MAX","blockNumber","setBlockNumber","sortSpeed","setSortSpeed","setArray","resetArray","random","useEffect","Object","keys","valIdx","indexOf","filter","_","includes","event","target","alert","App","to","exact","path","React","Component","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.24581bdf.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./AlgoPicker.css\";\n\nfunction AlgoPicker(props) {\n  const { algorithms, selected, handleAlgorithmClick } = props;\n\n  return (\n    <>\n      <p>Algorithms:</p>\n      {algorithms.map((algorithm, index) => (\n        <button\n          className={\n            selected.some((item) => item === algorithm)\n              ? \"AlgoPicker-name AlgoPicker-active\"\n              : \"AlgoPicker-name AlgoPicker-inactive\"\n          }\n          key={index}\n          onClick={() => handleAlgorithmClick(algorithm)}\n        >\n          {`${algorithm} Sort`}\n        </button>\n      ))}\n    </>\n  );\n}\n\nexport default AlgoPicker;\n","import React from \"react\";\nimport \"./Slider.css\";\n\nfunction Slider(props) {\n  const {\n    prompt,\n    slider_value,\n    slider_min,\n    slider_max,\n    slider_step,\n    disabled,\n    handleSliderChange,\n  } = props;\n\n  return (\n    <>\n      <span>\n        {prompt}\n        {\n          <input\n            className=\"Slider-numberinput\"\n            type=\"number\"\n            min={slider_min}\n            max={slider_max}\n            value={slider_value}\n            disabled={disabled}\n            onChange={handleSliderChange}\n          />\n        }\n      </span>\n\n      <input\n        className={disabled ? \"Slider-slider Slider-disabled\" : \"Slider-slider\"}\n        type=\"range\"\n        min={slider_min}\n        max={slider_max}\n        step={slider_step}\n        value={slider_value}\n        disabled={disabled}\n        onChange={handleSliderChange}\n      />\n    </>\n  );\n}\n\nexport default Slider;\n","export const algorithmInfos = {\n  Bubble: {\n    worst: { text: \"O(n\\u00B2)\", style: { color: \"red\", margin: 0 } },\n    best: { text: \"O(n)\", style: { color: \"green\", margin: 0 } },\n    average: { text: \"O(n\\u00B2)\", style: { color: \"red\", margin: 0 } },\n    description: \"\",\n  },\n  Bucket: {\n    worst: { text: \"O(n\\u00B2)\", style: { color: \"red\", margin: 0 } },\n    best: { text: \"O(n+k)\", style: { color: \"green\", margin: 0 } },\n    average: { text: \"O(n+k)\", style: { color: \"green\", margin: 0 } },\n    description: \"\",\n  },\n  Heap: {\n    worst: { text: \"O(n log(n))\", style: { color: \"darkorange\", margin: 0 } },\n    best: { text: \"O(n log(n))\", style: { color: \"darkorange\", margin: 0 } },\n    average: { text: \"O(n log(n))\", style: { color: \"darkorange\", margin: 0 } },\n    description: \"\",\n  },\n  Insertion: {\n    worst: { text: \"O(n\\u00B2)\", style: { color: \"red\", margin: 0 } },\n    best: { text: \"O(n)\", style: { color: \"green\", margin: 0 } },\n    average: { text: \"O(n\\u00B2)\", style: { color: \"red\", margin: 0 } },\n    description: \"\",\n  },\n  Merge: {\n    worst: { text: \"O(n log(n))\", style: { color: \"darkorange\", margin: 0 } },\n    best: { text: \"O(n log(n))\", style: { color: \"darkorange\", margin: 0 } },\n    average: { text: \"O(n log(n))\", style: { color: \"darkorange\", margin: 0 } },\n    description: \"\",\n  },\n  Quick: {\n    worst: { text: \"O(n\\u00B2)\", style: { color: \"red\", margin: 0 } },\n    best: { text: \"O(n log(n))\", style: { color: \"darkorange\", margin: 0 } },\n    average: { text: \"O(n log(n))\", style: { color: \"darkorange\", margin: 0 } },\n    description: \"\",\n  },\n  Radix: {\n    worst: { text: \"O(nk)\", style: { color: \"green\", margin: 0 } },\n    best: { text: \"O(nk)\", style: { color: \"green\", margin: 0 } },\n    average: { text: \"O(nk)\", style: { color: \"green\", margin: 0 } },\n    description: \"\",\n  },\n  Selection: {\n    worst: { text: \"O(n\\u00B2)\", style: { color: \"red\", margin: 0 } },\n    best: { text: \"O(n\\u00B2)\", style: { color: \"red\", margin: 0 } },\n    average: { text: \"O(n\\u00B2)\", style: { color: \"red\", margin: 0 } },\n    description: \"\",\n  },\n};\n","import { React, useRef } from \"react\";\nimport \"./AlgoContainer.css\";\nimport { algorithmInfos } from \"../Utilities/sortingAlgorithmInfos\";\n\nfunction AlgoContainer(props) {\n  const {\n    name,\n    array,\n    sortingAlgorithm,\n    delay,\n    sortedContainers,\n    setSortedContainers,\n    dataIndex,\n  } = props;\n  let localArray = [...array];\n  const blocksContainerRef = useRef(null);\n\n  function animateSort(sortingAlgorithm, array) {\n    const animations = sortingAlgorithm(array);\n    animations.forEach(([barData, type], index) => {\n      setTimeout(() => {\n        if (type === \"access\") {\n          barData.map((i) => animateAccess(i));\n        } else if (type === \"swap\") {\n          animateSwap(barData);\n        } else if (type === \"insert\") {\n          const [index, height] = barData;\n          animateInsert(index, height);\n        }\n      }, index * delay);\n    });\n  }\n\n  function animateAccess(index) {\n    const blocks = blocksContainerRef.current.children;\n\n    setTimeout(() => {\n      const style = blocks[index].style;\n      style.backgroundColor = \"red\";\n    }, delay);\n    setTimeout(() => {\n      const style = blocks[index].style;\n      style.backgroundColor = \"\";\n    }, delay * 2);\n  }\n\n  function animateSwap(indices) {\n    const blocks = blocksContainerRef.current.children;\n    const [i, j] = indices;\n    const [iHeight, jHeight] = [blocks[i].style.height, blocks[j].style.height];\n\n    const iStyle = blocks[i].style;\n    iStyle.height = jHeight;\n    const jStyle = blocks[j].style;\n    jStyle.height = iHeight;\n  }\n\n  function animateInsert(index, height) {\n    const blocks = blocksContainerRef.current.children;\n\n    const style = blocks[index].style;\n    style.height = `${height}px`;\n  }\n\n  return (\n    <div className=\"AlgoContainer-container\">\n      <div className=\"AlgoContainer-info\">\n        <h3 className=\"AlgoContainer-tooltip\">\n          {`${name} Sort`}\n          <span className=\"AlgoContainer-tooltiptext\">\n            Worst Case:\n            <span style={algorithmInfos[name][\"worst\"][\"style\"]}>\n              {` ${algorithmInfos[name][\"worst\"][\"text\"]}`}\n            </span>\n            <br />\n            Best Case:\n            <span style={algorithmInfos[name][\"best\"][\"style\"]}>\n              {` ${algorithmInfos[name][\"best\"][\"text\"]}`}\n            </span>\n            <br />\n            Average:\n            <span style={algorithmInfos[name][\"average\"][\"style\"]}>\n              {` ${algorithmInfos[name][\"average\"][\"text\"]}`}\n            </span>\n            <br />\n            Description:\n            <span style={{ margin: 0 }}>\n              {` ${algorithmInfos[name][\"description\"]}`}\n            </span>\n          </span>\n        </h3>\n        <h5>0.00ms</h5>\n      </div>\n      <button\n        className={\n          sortedContainers[dataIndex]\n            ? \"AlgoContainer-runbutton AlgoContainer-disabled\"\n            : \"AlgoContainer-runbutton\"\n        }\n        disabled={sortedContainers[dataIndex]}\n        onClick={() => {\n          animateSort(sortingAlgorithm, localArray);\n          setSortedContainers(\n            sortedContainers.map((val, index) =>\n              index === dataIndex ? true : val\n            )\n          );\n        }}\n      >\n        Run\n      </button>\n\n      <div className=\"AlgoContainer-blocks\" ref={blocksContainerRef}>\n        {localArray.map((value, index) => (\n          <div\n            className=\"AlgoContainer-block\"\n            style={{\n              height: `${value}px`,\n              width: `${100 / localArray.length}%`,\n            }}\n            key={index}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default AlgoContainer;\n","export function bubbleSort(array) {\n  // O(n^2)\n  let animations = [];\n\n  let n = array.length;\n  for (var i = 0; i < n - 1; i++) {\n    for (var j = 0; j < n - i - 1; j++) {\n      animations.push([[j, j + 1], \"access\"]);\n      if (array[j] > array[j + 1]) {\n        swap(array, j, j + 1);\n        animations.push([[j, j + 1], \"swap\"]);\n      }\n    }\n  }\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\n// todo: add animations\nexport function bucketSort(array, bucketCount = 10) {\n  // O(n^2)\n  let animations = [];\n\n  let min = Math.min(...array);\n  let max = Math.max(...array);\n\n  // init buckets\n  const bucketSize = Math.ceil((max - min) / bucketCount);\n  let buckets = new Array(bucketCount);\n  for (var i = 0; i < bucketCount; i++) {\n    buckets[i] = [];\n  }\n\n  // bucketPointers[i] points to end index of bucket[i] (i.e. where to insert new value into bucket)\n  let bucketPointers = new Array(bucketCount).fill(0);\n\n  // add values to buckets\n  array.forEach((val) => {\n    let bucketNumber = Math.floor((val - min) / bucketSize);\n    // put value into bucket\n    buckets[bucketNumber].push(val);\n    // update pointer for all buckets after (and including) bucket[bucketNumber]\n    for (var j = bucketNumber; j < bucketCount; j++) {\n      bucketPointers[j]++;\n    }\n  });\n\n  // create bucket animation\n  buckets.forEach((bucket, index) => {\n    let indexOffset = index > 0 ? bucketPointers[index - 1] : 0;\n    for (var k = 0; k < bucket.length; k++) {\n      animations.push([[k + indexOffset], \"access\"]);\n      animations.push([[k + indexOffset, bucket[k]], \"insert\"]);\n    }\n  });\n\n  // sort buckets w/ insertionSort\n  array = [];\n  buckets.forEach((bucket, index) => {\n    let indexOffset = index > 0 ? bucketPointers[index - 1] : 0;\n    // indices in animation from insertion sort dont match og array indices\n    let bucketAnimations = insertionSort(bucket);\n    // for all indices in animations, update by adding offset (which is length of prior buckets)\n    bucketAnimations = bucketAnimations.map(([barIndices, type]) => {\n      return [barIndices.map((i) => i + indexOffset), type];\n    });\n    animations = [...animations, ...bucketAnimations];\n    array = [...array, ...bucket];\n  });\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\n// todo: color levels of heap\nexport function heapSort(array) {\n  // O(n log(n))\n  let animations = [];\n\n  const findLevel = (index) => {\n    let level = 0;\n    while (index > 0) {\n      index = Math.floor((index - 1) / 2);\n      level++;\n    }\n    return level;\n  };\n  const heapify = (array, size, i, animations) => {\n    let max = i;\n    let left = 2 * i + 1; // left child idx\n    let right = 2 * i + 2; // right child idx\n\n    // left child is not last and value is bigger than root\n    if (left < size && array[left] > array[max]) {\n      max = left;\n    }\n    // left child is not last and value is bigger than root\n    if (right < size && array[right] > array[max]) {\n      max = right;\n    }\n    if (max !== i) {\n      animations.push([[i, max], \"access\"]);\n      swap(array, i, max);\n      animations.push([[i, max], \"swap\"]);\n\n      heapify(array, size, max, animations);\n    }\n  };\n\n  let n = array.length;\n  // create heap\n  for (var i = Math.floor(n / 2 - 1); i >= 0; i--) {\n    animations.push([[i], \"access\"]);\n    heapify(array, n, i, animations);\n  }\n\n  for (i = n - 1; i >= 0; i--) {\n    animations.push([[0, i], \"access\"]);\n    swap(array, 0, i);\n    animations.push([[0, i], \"swap\"]);\n    heapify(array, i, 0, animations);\n  }\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\nexport function insertionSort(array) {\n  // O(n^2)\n  let animations = [];\n\n  let n = array.length;\n  for (var i = 1; i < n; i++) {\n    for (var j = i - 1; j > -1; j--) {\n      animations.push([[j, j + 1], \"access\"]);\n      if (array[j] > array[j + 1]) {\n        swap(array, j, j + 1);\n        animations.push([[j, j + 1], \"swap\"]);\n      } else break;\n    }\n  }\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\nexport function mergeSort(array, animations = [], offset = 0) {\n  // O(n log(n))\n  console.log(\"-\");\n  console.log(array);\n  let n = array.length;\n  if (n < 2) {\n    return animations;\n  }\n\n  const mid = Math.floor(n / 2);\n  const left = array.slice(0, mid);\n  const right = array.slice(mid);\n\n  let lAnimations = mergeSort(left, animations, offset);\n  let rAnimations = mergeSort(right, animations, offset + mid);\n  animations = [...lAnimations, ...rAnimations];\n\n  let i = 0;\n  let j = 0;\n  let k = 0;\n\n  let p = left.length;\n  let q = right.length;\n\n  while (i < p && j < q) {\n    animations.push([[i + offset, j + offset + mid], \"access\"]);\n\n    if (left[i] < right[j]) {\n      animations.push([[k + offset, left[i]], \"insert\"]);\n      array[k] = left[i];\n      i += 1;\n    } else {\n      animations.push([[k + offset, right[j]], \"insert\"]);\n      array[k] = right[j];\n      j += 1;\n    }\n    k += 1;\n  }\n\n  while (i < p) {\n    array[k] = left[i];\n    animations.push([[i + offset], \"access\"]);\n    animations.push([[k + offset, left[i]], \"insert\"]);\n    i += 1;\n    k += 1;\n  }\n  while (j < q) {\n    array[k] = right[j];\n    animations.push([[j + offset + mid], \"access\"]);\n    animations.push([[k + offset, right[j]], \"insert\"]);\n    j += 1;\n    k += 1;\n  }\n  console.log(animations);\n  console.log(array);\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\nexport function quickSort(\n  array,\n  start = 0,\n  end = array.length - 1,\n  animations = []\n) {\n  // O(n^2)\n\n  // recursive implementation\n  const partition = (array, start, end, animations) => {\n    const pivotIdx = Math.floor((start + end) / 2);\n    const pivotVal = array[pivotIdx];\n    while (start <= end) {\n      while (array[start] < pivotVal) {\n        animations.push([[start, pivotIdx], \"access\"]);\n        start++;\n      }\n      while (array[end] > pivotVal) {\n        animations.push([[end, pivotIdx], \"access\"]);\n        end--;\n      }\n      animations.push([[start, end], \"access\"]);\n      if (start <= end) {\n        swap(array, start, end);\n        animations.push([[start, end], \"swap\"]);\n\n        start++;\n        end--;\n      }\n    }\n    return start;\n  };\n\n  if (start >= end) {\n    return;\n  }\n  let index = partition(array, start, end, animations);\n\n  if (start < index - 1) {\n    quickSort(array, start, index - 1, animations);\n  }\n  if (index < end) {\n    quickSort(array, index, end, animations);\n  }\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\nexport function radixSort(array) {\n  // O(nk)\n  let animations = [];\n\n  const getNum = (val, idx) => {\n    const strNum = val.toString();\n    let end = strNum.length - 1;\n    const num = strNum[end - idx];\n    return num === undefined ? 0 : num;\n  };\n  const longestNum = (array) => {\n    let longest = \"0\";\n    array.forEach((num) => {\n      const strNum = num.toString();\n      if (strNum.length > longest.length) {\n        longest = strNum;\n      }\n    });\n    return longest.length;\n  };\n\n  let maxLength = longestNum(array);\n  for (var i = 0; i < maxLength; i++) {\n    const bucketCount = 10;\n    var buckets = new Array(bucketCount);\n    for (var k = 0; k < bucketCount; k++) {\n      buckets[k] = [];\n    }\n\n    for (var j = 0; j < array.length; j++) {\n      let num = getNum(array[j], i);\n      if (num !== undefined) {\n        buckets[num].push(array[j]);\n      }\n    }\n    array = buckets.flat();\n    // batch update\n    for (var j = 0; j < array.length; j++) {\n      animations.push([[j], \"access\"]);\n      animations.push([[j, array[j]], \"insert\"]);\n    }\n  }\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\nexport function selectionSort(array) {\n  // O(n^2)\n  let animations = [];\n\n  // O(n^2)\n  let n = array.length;\n  for (var i = 0; i < n; i++) {\n    let smallest = i;\n    for (var j = i + 1; j < n; j++) {\n      animations.push([[j, smallest], \"access\"]);\n      if (array[j] < array[smallest]) {\n        smallest = j;\n      }\n    }\n    if (smallest !== i) {\n      swap(array, i, smallest);\n      animations.push([[i, smallest], \"swap\"]);\n    }\n  }\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\nfunction swap(array, index1, index2) {\n  const temp = array[index1];\n  array[index1] = array[index2];\n  array[index2] = temp;\n}\n","import React, { useState, useEffect } from \"react\";\nimport AlgoPicker from \"./AlgoPicker/AlgoPicker.jsx\";\nimport Slider from \"./Slider/Slider.jsx\";\nimport AlgoContainer from \"./AlgoContainer/AlgoContainer.jsx\";\nimport {\n  bubbleSort,\n  bucketSort,\n  heapSort,\n  insertionSort,\n  mergeSort,\n  quickSort,\n  radixSort,\n  selectionSort,\n} from \"./Utilities/sortingAlgorithms\";\nimport \"./SorterApp.css\";\n\nconst BLOCK_NUM_MIN = 10;\nconst BLOCK_NUM_MAX = 500;\nconst BLOCK_NUM_STEP = 10;\nconst BLOCK_NUM_DEFAULT = BLOCK_NUM_MAX / 2;\n\nconst SORT_SPEED_MIN = 1;\nconst SORT_SPEED_MAX = 100;\nconst SORT_SPEED_STEP = 1;\nconst SORT_SPEED_DEFAULT = SORT_SPEED_MAX;\n\nconst MIN_BLOCK_LENGTH = 10;\nconst MAX_BLOCK_LENGTH = 500;\n\nconst ALGORITHMS = {\n  Bubble: bubbleSort,\n  Bucket: bucketSort,\n  Heap: heapSort,\n  Insertion: insertionSort,\n  Merge: mergeSort,\n  Quick: quickSort,\n  Radix: radixSort,\n  Selection: selectionSort,\n};\n\nfunction SorterApp() {\n  const [selected, setSelected] = useState([]);\n  const [blockNumber, setBlockNumber] = useState(BLOCK_NUM_DEFAULT);\n  const [sortSpeed, setSortSpeed] = useState(SORT_SPEED_DEFAULT);\n  const [array, setArray] = useState([]);\n  const [sortedContainers, setSortedContainers] = useState([]);\n\n  useEffect(resetArray, []);\n\n  function handleAlgorithmClick(value) {\n    if (selected.some((item) => item === value)) {\n      const valIdx = selected.indexOf(value);\n      setSelected(selected.filter((_, index) => index !== valIdx));\n      setSortedContainers(\n        sortedContainers.filter((_, index) => index !== valIdx)\n      );\n    } else {\n      setSelected([...selected, value]);\n      setSortedContainers([...sortedContainers, false]);\n    }\n  }\n\n  function handleBlockNumChange(event) {\n    setBlockNumber(event.target.value);\n  }\n\n  function handleSpeedChange(event) {\n    setSortSpeed(event.target.value);\n  }\n\n  function resetArray() {\n    setArray(\n      [...Array(BLOCK_NUM_MAX)].map(() =>\n        Math.floor(Math.random() * MAX_BLOCK_LENGTH)\n      )\n    );\n  }\n\n  return (\n    <>\n      <div className=\"SorterApp-header\">\n        <h1 className=\"SorterApp-title\">Sorter</h1>\n        <div className=\"SorterApp-headerbuttons\">\n          <div className=\"left\">\n            <div className=\"SorterApp-algopickercontainer\">\n              <AlgoPicker\n                algorithms={Object.keys(ALGORITHMS)}\n                selected={selected}\n                handleAlgorithmClick={handleAlgorithmClick}\n              />\n            </div>\n            <div className=\"SorterApp-slidercontainer\">\n              <Slider\n                prompt=\"Number of Blocks: \"\n                slider_value={blockNumber}\n                slider_min={BLOCK_NUM_MIN}\n                slider_max={BLOCK_NUM_MAX}\n                slider_step={BLOCK_NUM_STEP}\n                disabled={sortedContainers.includes(true)}\n                handleSliderChange={handleBlockNumChange}\n              />\n            </div>\n            <div className=\"SorterApp-slidercontainer\">\n              <Slider\n                prompt=\"Sorting Speed: \"\n                slider_value={sortSpeed}\n                slider_min={SORT_SPEED_MIN}\n                slider_max={SORT_SPEED_MAX}\n                slider_step={SORT_SPEED_STEP}\n                disabled={sortedContainers.includes(true)}\n                handleSliderChange={handleSpeedChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"right\">\n            <div className=\"SorterApp-buttonscontainer\">\n              <button\n                className={\n                  sortedContainers.includes(true)\n                    ? \"SorterApp-button run disabled\"\n                    : \"SorterApp-button run\"\n                }\n                disabled={sortedContainers.includes(true)} // todo: here\n                onClick={() => {\n                  alert(\"doesn't work (yet)... run individually\");\n                }}\n              >\n                Run All\n              </button>\n              <button\n                className={\n                  !sortedContainers.includes(true)\n                    ? \"SorterApp-button reset disabled\"\n                    : \"SorterApp-button reset\"\n                }\n                disabled={!sortedContainers.includes(true)}\n                onClick={() => {\n                  resetArray();\n                  setSortedContainers(sortedContainers.map(() => false));\n                }}\n              >\n                Reset All\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      {selected.length ? (\n        selected.map((algorithm, index) => (\n          <AlgoContainer\n            name={algorithm}\n            array={array.slice(0, blockNumber)}\n            sortingAlgorithm={ALGORITHMS[algorithm]}\n            delay={100 - sortSpeed + 1}\n            sortedContainers={sortedContainers}\n            setSortedContainers={setSortedContainers}\n            dataIndex={index}\n            key={algorithm}\n          />\n        ))\n      ) : (\n        <div className=\"SorterApp-bodyplaceholder\">\n          Select Algorithm(s) to add\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default SorterApp;\n","import React from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport SorterApp from \"./sorter/SorterApp\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-nav\">\n          <Link to=\"\" className=\"link\">\n            Home\n          </Link>\n          <Link to=\"/sorter\" className=\"link\">\n            Sorter\n          </Link>\n          <Link to=\"/pathfinder\" className=\"link\">\n            Pathfinder\n          </Link>\n        </div>\n        <Switch>\n          <Route exact path=\"/\">\n            <h1 style={{ margin: \"24px\" }}>Home</h1>\n          </Route>\n          <Route path=\"/sorter\">\n            <SorterApp />\n          </Route>\n          <Route path=\"/pathfinder\">\n            <div>\n              <h1 style={{ margin: \"24px\" }}>Pathfinder</h1>\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/algorithms-visualizer\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}