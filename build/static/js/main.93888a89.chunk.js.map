{"version":3,"sources":["sorter/AlgoPicker/AlgoPicker.jsx","sorter/Slider/Slider.jsx","sorter/AlgoContainer/AlgoContainer.jsx","sorter/sortingAlgorithms.js","sorter/SorterApp.jsx","App.jsx","index.jsx"],"names":["AlgoPicker","props","algorithms","selected","handleAlgorithmClick","map","algorithm","index","className","some","item","onClick","Slider","prompt","slider_value","slider_min","slider_max","slider_step","disabled","handleSliderChange","type","min","max","value","onChange","step","AlgoContainer","name","array","sortingAlgorithm","delay","sortedContainers","setSortedContainers","dataIndex","localArray","blocksContainerRef","useRef","animateSort","forEach","barIndices","setTimeout","i","blocks","current","children","style","backgroundColor","animateComparison","indices","j","height","iHeight","jHeight","animateSwap","val","ref","width","length","insertionSort","animations","arr","n","push","swap","index1","index2","temp","ALGORITHMS","Bubble","Bucket","bucketCount","Math","floor","buckets","Array","sortedArray","bucket","sortedBucket","concat","Heap","heapify","size","left","right","Insertion","Merge","mergeSort","mid","shift","merge","splice","Quick","quickSort","start","end","partition","pivotIdx","pivotVal","Radix","getNum","idx","strNum","toString","num","undefined","maxLength","longest","longestNum","k","flat","Selection","smallest","SorterApp","useState","setSelected","BLOCK_NUM_MAX","blockNumber","setBlockNumber","sortSpeed","setSortSpeed","setArray","resetArray","random","useEffect","Object","keys","valIdx","indexOf","filter","_","includes","event","target","alert","slice","App","to","exact","path","React","Component","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.93888a89.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./AlgoPicker.css\";\n\nfunction AlgoPicker(props) {\n  const { algorithms, selected, handleAlgorithmClick } = props;\n\n  return (\n    <>\n      <p>Algorithms:</p>\n      {algorithms.map((algorithm, index) => (\n        <button\n          className={\n            selected.some((item) => item === algorithm)\n              ? \"AlgoPicker-name AlgoPicker-active\"\n              : \"AlgoPicker-name AlgoPicker-inactive\"\n          }\n          key={index}\n          onClick={() => handleAlgorithmClick(algorithm)}\n        >\n          {`${algorithm} Sort`}\n        </button>\n      ))}\n    </>\n  );\n}\n\nexport default AlgoPicker;\n","import React from \"react\";\nimport \"./Slider.css\";\n\nfunction Slider(props) {\n  const {\n    prompt,\n    slider_value,\n    slider_min,\n    slider_max,\n    slider_step,\n    disabled,\n    handleSliderChange,\n  } = props;\n\n  return (\n    <>\n      <span>\n        {prompt}\n        {\n          <input\n            className=\"Slider-numberinput\"\n            type=\"number\"\n            min={slider_min}\n            max={slider_max}\n            value={slider_value}\n            disabled={disabled}\n            onChange={handleSliderChange}\n          />\n        }\n      </span>\n\n      <input\n        className={disabled ? \"Slider-slider Slider-disabled\" : \"Slider-slider\"}\n        type=\"range\"\n        min={slider_min}\n        max={slider_max}\n        step={slider_step}\n        value={slider_value}\n        disabled={disabled}\n        onChange={handleSliderChange}\n      />\n    </>\n  );\n}\n\nexport default Slider;\n","import { React, useRef, useEffect } from \"react\";\nimport \"./AlgoContainer.css\";\n\nfunction AlgoContainer(props) {\n  const {\n    name,\n    array,\n    sortingAlgorithm,\n    delay,\n    sortedContainers,\n    setSortedContainers,\n    dataIndex,\n  } = props;\n  let localArray = [...array];\n  const blocksContainerRef = useRef(null);\n\n  function animateSort(sortingAlgorithm, array) {\n    const animations = sortingAlgorithm(array);\n    animations.forEach(([barIndices, type], index) => {\n      setTimeout(() => {\n        if (type === \"comparison\") {\n          barIndices.map((i) => animateComparison(i));\n        } else if (type === \"swap\") {\n          animateSwap(barIndices);\n        }\n      }, index * delay);\n    });\n  }\n\n  function animateComparison(index) {\n    const blocks = blocksContainerRef.current.children;\n\n    setTimeout(() => {\n      const style = blocks[index].style;\n      style.backgroundColor = \"red\";\n    }, delay);\n    setTimeout(() => {\n      const style = blocks[index].style;\n      style.backgroundColor = \"\";\n    }, delay * 2);\n  }\n\n  function animateSwap(indices) {\n    const blocks = blocksContainerRef.current.children;\n    const [i, j] = indices;\n    const [iHeight, jHeight] = [blocks[i].style.height, blocks[j].style.height];\n\n    const iStyle = blocks[i].style;\n    iStyle.height = jHeight;\n    const jStyle = blocks[j].style;\n    jStyle.height = iHeight;\n  }\n\n  return (\n    <div className=\"AlgoContainer-container\">\n      <div className=\"AlgoContainer-info\">\n        <h3>{`${name} Sort`}</h3>\n        <h5>0.00ms</h5>\n      </div>\n      <button\n        className={\n          sortedContainers[dataIndex]\n            ? \"AlgoContainer-runbutton AlgoContainer-disabled\"\n            : \"AlgoContainer-runbutton\"\n        }\n        disabled={sortedContainers[dataIndex]}\n        onClick={() => {\n          animateSort(sortingAlgorithm, localArray);\n          setSortedContainers(\n            sortedContainers.map((val, index) =>\n              index === dataIndex ? true : val\n            )\n          );\n        }}\n      >\n        Run\n      </button>\n\n      <div className=\"AlgoContainer-blocks\" ref={blocksContainerRef}>\n        {localArray.map((value, index) => (\n          <div\n            className=\"AlgoContainer-block\"\n            style={{\n              height: `${value}px`,\n              width: `${100 / localArray.length}%`,\n            }}\n            key={index}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default AlgoContainer;\n","// good\nexport function bubbleSort(array) {\n  // O(n^2)\n  let animations = [];\n  let arr = [...array]; // copy array to not change original\n\n  let n = arr.length;\n  for (var i = 0; i < n - 1; i++) {\n    for (var j = 0; j < n - i - 1; j++) {\n      animations.push([[j, j + 1], \"comparison\"]);\n      if (arr[j] > arr[j + 1]) {\n        swap(arr, j, j + 1);\n        animations.push([[j, j + 1], \"swap\"]);\n      }\n    }\n  }\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\n// todo: add animations\nexport function bucketSort(array) {\n  // O(n^2)\n  let arr = [...array]; // copy array to not change original\n\n  let min = arr[0];\n  let max = arr[0];\n  let bucketSize = 5;\n\n  arr.forEach((val) => {\n    if (val < min) {\n      min = val;\n    } else if (val > max) {\n      max = val;\n    }\n  });\n\n  // init buckets\n  let bucketCount = Math.floor((max - min) / bucketSize) + 1;\n  var buckets = new Array(bucketCount);\n\n  for (var i = 0; i < bucketCount; i++) {\n    buckets[i] = [];\n  }\n\n  // add values to buckets\n  arr.forEach((val) => {\n    buckets[Math.floor((val - min) / bucketSize)].push(val);\n  });\n\n  // sort buckets w/ insertionSort\n  let sortedArray = [];\n  buckets.forEach((bucket) => {\n    let sortedBucket = insertionSort(bucket);\n    sortedArray = sortedArray.concat(sortedBucket);\n  });\n\n  return sortedArray;\n}\n\n/* -------------------------------------------------------------------------- */\n\n// todo: add animations\nexport function heapSort(array) {\n  // O(n log(n))\n  let arr = [...array]; // copy array to not change original\n\n  const heapify = (arr, size, i) => {\n    let max = i;\n    let left = 2 * i + 1; // left child idx\n    let right = 2 * i + 2; // right child idx\n\n    // left child is not last and value is bigger than root\n    if (left < size && arr[left] > arr[max]) {\n      max = left;\n    }\n    // left child is not last and value is bigger than root\n    if (right < size && arr[right] > arr[max]) {\n      max = right;\n    }\n    if (max !== i) {\n      swap(arr, i, max);\n      heapify(arr, size, max);\n    }\n  };\n\n  let n = arr.length;\n  // create heap\n  for (var i = Math.floor(n / 2 - 1); i >= 0; i--) {\n    heapify(arr, n, i);\n  }\n\n  for (i = n - 1; i >= 0; i--) {\n    swap(arr, 0, i);\n    heapify(arr, i, 0);\n  }\n\n  return arr;\n}\n\n/* -------------------------------------------------------------------------- */\n\n// good\nexport function insertionSort(array) {\n  // O(n^2)\n  let animations = [];\n  let arr = [...array]; // copy array to not change original\n\n  let n = arr.length;\n  for (var i = 1; i < n; i++) {\n    for (var j = i - 1; j > -1; j--) {\n      animations.push([[j, j + 1], \"comparison\"]);\n      if (arr[j] > arr[j + 1]) {\n        swap(arr, j, j + 1);\n        animations.push([[j, j + 1], \"swap\"]);\n      } else break;\n    }\n  }\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\n// todo: add animations\nexport function mergeSort(array) {\n  // O(n log(n))\n  let animations = [];\n  let arr = [...array]; // copy array to not change original\n\n  function merge(left, right) {\n    let arr = [];\n\n    while (left.length && right.length) {\n      if (left[0] < right[0]) {\n        arr.push(left.shift());\n      } else {\n        arr.push(right.shift());\n      }\n    }\n\n    return [...arr, ...left, ...right];\n  }\n\n  const mid = arr.length / 2;\n\n  if (arr.length < 2) {\n    return arr;\n  }\n\n  const left = arr.splice(0, mid); // right = arr\n  return merge(mergeSort(left), mergeSort(arr));\n}\n\n/* -------------------------------------------------------------------------- */\n\n// good\nexport function quickSort(\n  array,\n  start = 0,\n  end = array.length - 1,\n  animations = []\n) {\n  // O(n^2)\n  let arr = [...array]; // copy array to not change original\n\n  // recursive implementation\n  const partition = (arr, start, end, animations) => {\n    const pivotIdx = Math.floor((start + end) / 2);\n    const pivotVal = arr[pivotIdx];\n    while (start <= end) {\n      while (arr[start] < pivotVal) {\n        animations.push([[start, pivotIdx], \"comparison\"]);\n        start++;\n      }\n      while (arr[end] > pivotVal) {\n        animations.push([[end, pivotIdx], \"comparison\"]);\n        end--;\n      }\n      animations.push([[start, end], \"comparison\"]);\n      if (start <= end) {\n        swap(arr, start, end);\n        animations.push([[start, end], \"swap\"]);\n\n        start++;\n        end--;\n      }\n    }\n    return start;\n  };\n\n  if (start >= end) {\n    return;\n  }\n  let index = partition(arr, start, end, animations);\n\n  if (start < index - 1) {\n    quickSort(arr, start, index - 1, animations);\n  }\n  if (index < end) {\n    quickSort(arr, index, end, animations);\n  }\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\n// todo: add animations\nexport function radixSort(array) {\n  // O(nk)\n  let arr = [...array]; // copy array to not change original\n\n  const getNum = (val, idx) => {\n    const strNum = val.toString();\n    let end = strNum.length - 1;\n    const num = strNum[end - idx];\n    return num === undefined ? 0 : num;\n  };\n  const longestNum = (arr) => {\n    let longest = \"0\";\n    arr.forEach((num) => {\n      const strNum = num.toString();\n      if (strNum.length > longest.length) {\n        longest = strNum;\n      }\n    });\n    return longest.length;\n  };\n\n  let maxLength = longestNum(arr);\n  for (var i = 0; i < maxLength; i++) {\n    const bucketCount = 10;\n    var buckets = new Array(bucketCount);\n    for (var k = 0; k < bucketCount; k++) {\n      buckets[k] = [];\n    }\n\n    for (var j = 0; j < arr.length; j++) {\n      let num = getNum(arr[j], i);\n      if (num !== undefined) {\n        buckets[num].push(arr[j]);\n      }\n    }\n    arr = buckets.flat();\n  }\n\n  return arr;\n}\n\n/* -------------------------------------------------------------------------- */\n\n// good\nexport function selectionSort(array) {\n  // O(n^2)\n  let animations = [];\n  let arr = [...array]; // copy array to not change original\n\n  // O(n^2)\n  let n = arr.length;\n  for (var i = 0; i < n; i++) {\n    let smallest = i;\n    for (var j = i + 1; j < n; j++) {\n      animations.push([[j, smallest], \"comparison\"]);\n      if (arr[j] < arr[smallest]) {\n        smallest = j;\n      }\n    }\n    if (smallest !== i) {\n      swap(arr, i, smallest);\n      animations.push([[i, smallest], \"swap\"]);\n    }\n  }\n\n  return animations;\n}\n\n/* -------------------------------------------------------------------------- */\n\nfunction swap(array, index1, index2) {\n  const temp = array[index1];\n  array[index1] = array[index2];\n  array[index2] = temp;\n}\n","import React, { useState, useEffect } from \"react\";\nimport AlgoPicker from \"./AlgoPicker/AlgoPicker.jsx\";\nimport Slider from \"./Slider/Slider.jsx\";\nimport AlgoContainer from \"./AlgoContainer/AlgoContainer.jsx\";\nimport {\n  bubbleSort,\n  bucketSort,\n  heapSort,\n  insertionSort,\n  mergeSort,\n  quickSort,\n  radixSort,\n  selectionSort,\n} from \"./sortingAlgorithms\";\nimport \"./SorterApp.css\";\n\nconst BLOCK_NUM_MIN = 10;\nconst BLOCK_NUM_MAX = 500;\nconst BLOCK_NUM_STEP = 10;\nconst BLOCK_NUM_DEFAULT = BLOCK_NUM_MAX / 2;\n\nconst SORT_SPEED_MIN = 1;\nconst SORT_SPEED_MAX = 100;\nconst SORT_SPEED_STEP = 1;\nconst SORT_SPEED_DEFAULT = SORT_SPEED_MAX;\n\nconst MIN_BLOCK_LENGTH = 10;\nconst MAX_BLOCK_LENGTH = 500;\n\nconst ALGORITHMS = {\n  Bubble: bubbleSort,\n  Bucket: bucketSort,\n  Heap: heapSort,\n  Insertion: insertionSort,\n  Merge: mergeSort,\n  Quick: quickSort,\n  Radix: radixSort,\n  Selection: selectionSort,\n};\n\nfunction SorterApp() {\n  const [selected, setSelected] = useState([]);\n  const [blockNumber, setBlockNumber] = useState(BLOCK_NUM_DEFAULT);\n  const [sortSpeed, setSortSpeed] = useState(SORT_SPEED_DEFAULT);\n  const [array, setArray] = useState([]);\n  const [sortedContainers, setSortedContainers] = useState([]);\n\n  useEffect(resetArray, []);\n\n  function handleAlgorithmClick(value) {\n    if (selected.some((item) => item === value)) {\n      const valIdx = selected.indexOf(value);\n      setSelected(selected.filter((_, index) => index !== valIdx));\n      setSortedContainers(\n        sortedContainers.filter((_, index) => index !== valIdx)\n      );\n    } else {\n      setSelected([...selected, value]);\n      setSortedContainers([...sortedContainers, false]);\n    }\n  }\n\n  function handleBlockNumChange(event) {\n    setBlockNumber(event.target.value);\n  }\n\n  function handleSpeedChange(event) {\n    setSortSpeed(event.target.value);\n  }\n\n  function resetArray() {\n    setArray(\n      [...Array(BLOCK_NUM_MAX)].map(() =>\n        Math.floor(Math.random() * MAX_BLOCK_LENGTH)\n      )\n    );\n  }\n\n  return (\n    <>\n      <div className=\"SorterApp-header\">\n        <h1 className=\"SorterApp-title\">Sorter</h1>\n        <div className=\"SorterApp-headerbuttons\">\n          <div className=\"left\">\n            <div className=\"SorterApp-algopickercontainer\">\n              <AlgoPicker\n                algorithms={Object.keys(ALGORITHMS)}\n                selected={selected}\n                handleAlgorithmClick={handleAlgorithmClick}\n              />\n            </div>\n            <div className=\"SorterApp-slidercontainer\">\n              <Slider\n                prompt=\"Number of Blocks: \"\n                slider_value={blockNumber}\n                slider_min={BLOCK_NUM_MIN}\n                slider_max={BLOCK_NUM_MAX}\n                slider_step={BLOCK_NUM_STEP}\n                disabled={sortedContainers.includes(true)}\n                handleSliderChange={handleBlockNumChange}\n              />\n            </div>\n            <div className=\"SorterApp-slidercontainer\">\n              <Slider\n                prompt=\"Sorting Speed: \"\n                slider_value={sortSpeed}\n                slider_min={SORT_SPEED_MIN}\n                slider_max={SORT_SPEED_MAX}\n                slider_step={SORT_SPEED_STEP}\n                disabled={sortedContainers.includes(true)}\n                handleSliderChange={handleSpeedChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"right\">\n            <div className=\"SorterApp-buttonscontainer\">\n              <button\n                className={\n                  sortedContainers.includes(true)\n                    ? \"SorterApp-button run disabled\"\n                    : \"SorterApp-button run\"\n                }\n                disabled={sortedContainers.includes(true)} // todo: here\n                onClick={() => {\n                  alert(\"doesn't work (yet)... run individually\");\n                }}\n              >\n                Run All\n              </button>\n              <button\n                className={\n                  !sortedContainers.includes(true)\n                    ? \"SorterApp-button reset disabled\"\n                    : \"SorterApp-button reset\"\n                }\n                disabled={!sortedContainers.includes(true)}\n                onClick={() => {\n                  resetArray();\n                  setSortedContainers(sortedContainers.map(() => false));\n                }}\n              >\n                Reset All\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      {selected.length ? (\n        selected.map((algorithm, index) => (\n          <AlgoContainer\n            name={algorithm}\n            array={array.slice(0, blockNumber)}\n            sortingAlgorithm={ALGORITHMS[algorithm]}\n            delay={100 - sortSpeed + 1}\n            sortedContainers={sortedContainers}\n            setSortedContainers={setSortedContainers}\n            dataIndex={index}\n            key={algorithm}\n          />\n        ))\n      ) : (\n        <div className=\"SorterApp-bodyplaceholder\">\n          Select Algorithm(s) to add\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default SorterApp;\n","import React from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport SorterApp from \"./sorter/SorterApp\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-nav\">\n          <Link to=\"/\" className=\"link\">\n            Home\n          </Link>\n          <Link to=\"/sorter\" className=\"link\">\n            Sorter\n          </Link>\n          <Link to=\"/pathfinder\" className=\"link\">\n            Pathfinder\n          </Link>\n        </div>\n        <Switch>\n          <Route exact path=\"/\">\n            <div>\n              <h2>Home</h2>\n            </div>\n          </Route>\n          <Route path=\"/sorter\">\n            <SorterApp />\n          </Route>\n          <Route path=\"/pathfinder\">\n            <div>\n              <h2>Pathfinder</h2>\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/algorithms\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}