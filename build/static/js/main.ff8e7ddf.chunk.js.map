{"version":3,"sources":["sorter/AlgoPicker/AlgoPicker.js","sorter/Slider/Slider.js","sorter/AlgoContainer/AlgoContainer.js","sorter/SorterApp.js","App.js","index.js"],"names":["AlgoPicker","props","this","algorithms","map","algorithm","index","className","selected","some","item","onClick","handleAlgorithmClick","React","Component","Slider","style","whiteSpace","type","min","slider_min","max","slider_max","value","slider_value","onChange","handleSliderChange","step","slider_step","AlgoContainer","name","array","height","width","length","SLIDER_MAX","ALGORITHMS","SorterApp","state","blockNumber","bind","resetArray","setState","filter","event","target","Array","Math","floor","random","header","slider_default","console","log","body","slice","bodyPlaceholder","App","to","exact","path","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ff8e7ddf.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./AlgoPicker.css\";\n\nclass AlgoPicker extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <p>Algorithms:</p>\n        {this.props.algorithms.map((algorithm, index) => {\n          return (\n            <button\n              className={\n                this.props.selected.some((item) => item === algorithm)\n                  ? \"AlgoPicker-name AlgoPicker-active\"\n                  : \"AlgoPicker-name AlgoPicker-inactive\"\n              }\n              key={index}\n              onClick={() => this.props.handleAlgorithmClick(algorithm)}\n            >\n              {`${algorithm} Sort`}\n            </button>\n          );\n        })}\n      </>\n    );\n  }\n}\n\nexport default AlgoPicker;\n","import React from \"react\";\nimport \"./Slider.css\";\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <span\n          style={{\n            whiteSpace: \"pre\",\n          }}\n        >\n          <p>\n            Number of Blocks:{\" \"}\n            {\n              <input\n                className=\"Slider-numberinput\"\n                type=\"number\"\n                min={this.props.slider_min}\n                max={this.props.slider_max}\n                value={this.props.slider_value}\n                onChange={this.props.handleSliderChange}\n              />\n            }\n          </p>\n        </span>\n\n        <input\n          className=\"Slider-slider\"\n          type=\"range\"\n          min={this.props.slider_min}\n          max={this.props.slider_max}\n          step={this.props.slider_step}\n          value={this.props.slider_value}\n          onChange={this.props.handleSliderChange}\n        />\n      </>\n    );\n  }\n}\n\nexport default Slider;\n","import React from \"react\";\nimport \"./AlgoContainer.css\";\n\nclass AlgoContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"AlgoContainer-container\">\n        <div className=\"AlgoContainer-info\">\n          <h3>{`${this.props.name} Sort`}</h3>\n          <h5>0.00ms</h5>\n        </div>\n        <button className=\"AlgoContainer-runbutton\">Run</button>\n        <div className=\"AlgoContainer-blocks\">\n          {this.props.array.map((value, index) => {\n            return (\n              <div\n                className=\"AlgoContainer-block\"\n                style={{\n                  height: `${value}px`,\n                  width: `${100 / this.props.array.length}%`,\n                }}\n                key={index}\n              ></div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AlgoContainer;\n","import React from \"react\";\nimport AlgoPicker from \"./AlgoPicker/AlgoPicker.js\";\nimport Slider from \"./Slider/Slider.js\";\nimport AlgoContainer from \"./AlgoContainer/AlgoContainer.js\";\nimport \"./SorterApp.css\";\n\nconst SLIDER_MIN = 100;\nconst SLIDER_MAX = 2000;\nconst SLIDER_STEP = 10;\nconst SLIDER_DEFAULT = SLIDER_MAX / 2;\n\nconst MIN_BLOCK_LENGTH = 10;\nconst MAX_BLOCK_LENGTH = 500;\n\nconst ALGORITHMS = [\n  \"Bubble\",\n  \"Bucket\",\n  \"Heap\",\n  \"Insertion\",\n  \"Merge\",\n  \"Quick\",\n  \"Radix\",\n  \"Selection\",\n];\n\nclass SorterApp extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      selected: [],\n      blockNumber: SLIDER_DEFAULT,\n      array: [],\n    };\n    this.handleAlgorithmClick = this.handleAlgorithmClick.bind(this);\n    this.handleSliderChange = this.handleSliderChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  handleAlgorithmClick(value) {\n    if (this.state.selected.some((item) => item === value)) {\n      this.setState({\n        selected: this.state.selected.filter((item) => item !== value),\n      });\n    } else {\n      this.setState({ selected: [...this.state.selected, value] });\n    }\n  }\n\n  handleSliderChange(event) {\n    this.setState({ blockNumber: event.target.value });\n  }\n\n  resetArray() {\n    this.setState({\n      array: [...Array(SLIDER_MAX)].map(() =>\n        Math.floor(Math.random() * MAX_BLOCK_LENGTH)\n      ),\n    });\n  }\n\n  render() {\n    const header = (\n      <div className=\"SorterApp-header\">\n        <h1 className=\"SorterApp-title\">Sorter</h1>\n        <div className=\"SorterApp-headerbuttons\">\n          <div className=\"SorterApp-algopickercontainer\">\n            <AlgoPicker\n              algorithms={ALGORITHMS}\n              selected={this.state.selected}\n              handleAlgorithmClick={this.handleAlgorithmClick}\n            />\n          </div>\n          <div className=\"right-wrap\">\n            <div className=\"SorterApp-slidercontainer\">\n              <Slider\n                slider_value={this.state.blockNumber}\n                slider_min={SLIDER_MIN}\n                slider_max={SLIDER_MAX}\n                slider_default={SLIDER_DEFAULT}\n                slider_step={SLIDER_STEP}\n                handleSliderChange={this.handleSliderChange}\n              />\n            </div>\n            <div className=\"SorterApp-actionbuttonscontainer\">\n              <button\n                className=\"SorterApp-actionbutton run\"\n                onClick={() => console.log(\"run\")}\n              >\n                Run All\n              </button>\n              <button\n                className=\"SorterApp-actionbutton reset\"\n                onClick={() => {\n                  this.resetArray();\n                }}\n              >\n                Reset All\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    const body = this.state.selected.map((algorithm, index) => {\n      return (\n        <AlgoContainer\n          name={algorithm}\n          array={this.state.array.slice(0, this.state.blockNumber)}\n          key={index}\n        />\n      );\n    });\n\n    const bodyPlaceholder = (\n      <div className=\"SorterApp-bodyplaceholder\">\n        Select Algorithm(s) to add\n      </div>\n    );\n\n    return (\n      <>\n        <>{header}</>\n        <>{body.length ? body : bodyPlaceholder}</>\n      </>\n    );\n  }\n}\n\nexport default SorterApp;\n","import React from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport SorterApp from \"./sorter/SorterApp\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-nav\">\n          <Link to=\"/\" className=\"link\">\n            Home\n          </Link>\n          <Link to=\"/sorter\" className=\"link\">\n            Sorter\n          </Link>\n          <Link to=\"/pathfinder\" className=\"link\">\n            Pathfinder\n          </Link>\n        </div>\n        <Switch>\n          <Route exact path=\"/\">\n            <div>\n              <h2>Home</h2>\n            </div>\n          </Route>\n          <Route path=\"/sorter\">\n            <SorterApp />\n          </Route>\n          <Route path=\"/pathfinder\">\n            <div>\n              <h2>Pathfinder</h2>\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/algorithms\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}